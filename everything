package main

import (
	"github.com/gin-gonic/gin"
)

func index(c *gin.Context) {
	c.JSON(200, gin.H{"message": "A joo huh?"})

}

func main() {
	router := gin.Default()

	router.GET("/", index)
	router.GET("/spotify", index)

	router.Run()

}

FROM golang:alpine
ENV CGO_ENABLED 0 
RUN apk update && apk add --no-cache git curl
RUN mkdir /app
ADD . /app/
WORKDIR /app
RUN curl -sSfL https://raw.githubusercontent.com/cosmtrek/air/master/install.sh | sh -s -- -b $(go env GOPATH)/bin
EXPOSE 8080
ENTRYPOINT ["air"]


version: "3.7"
services:
  web:
    build: ./
    ports:
      - 8080:8080
    volumes:
      - ./:/app
      
      
      [build]
# Just plain old shell command. You could use `make` as well.
cmd = "go build -o ./tmp/app ."
bin = "tmp/app"
log = "air_errors.log"
# Watch these filename extensions.
#include_ext = ["go", "yaml"]
# Ignore these filename extensions or directories.
#exclude_dir = ["tmp"]
# It's not necessary to trigger build each time file changes if it's too frequent.
delay = 1000 # ms

[log]
# Show log time
time = true

[misc]
# Delete tmp directory on exit
clean_on_exit = true
